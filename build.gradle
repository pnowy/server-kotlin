buildscript {
	ext {
		kotlinVersion = '1.2.71'
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'softwareclazz'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
}


dependencies {
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	compile 'io.github.microutils:kotlin-logging:1.6.10'

	compile "io.jsonwebtoken:jjwt-api:0.10.5"
	runtime "io.jsonwebtoken:jjwt-impl:0.10.5"
	runtime "io.jsonwebtoken:jjwt-jackson:0.10.5"

	compile 'org.zalando:problem-spring-web:0.24.0-RC.0'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'

    implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	compile "org.springframework.boot:spring-boot-starter-mail"
	compile "org.springframework.boot:spring-boot-starter-thymeleaf"
    compile 'com.github.scribejava:scribejava-apis:5.4.0'
	compile group: 'com.google.guava', name: 'guava', version: '27.0-jre'
    compile group: 'com.zaxxer', name: 'HikariCP', version: '3.2.0'
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.liquibase:liquibase-core')
	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	runtimeOnly('com.h2database:h2')

    runtimeOnly('org.postgresql:postgresql')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}
